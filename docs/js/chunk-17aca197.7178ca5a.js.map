{"version":3,"sources":["webpack:///./node_modules/minimalistic-crypto-utils/lib/utils.js","webpack:///./node_modules/miller-rabin/lib/mr.js","webpack:///./node_modules/miller-rabin/node_modules/bn.js/lib/bn.js","webpack:///./node_modules/minimalistic-assert/index.js","webpack:///./node_modules/md5.js/index.js"],"names":["utils","exports","toArray","msg","enc","Array","isArray","slice","res","i","length","replace","push","parseInt","c","charCodeAt","hi","lo","zero2","word","toHex","toString","encode","arr","bn","brorand","MillerRabin","rand","this","Rand","module","create","prototype","_randbelow","n","len","bitLength","min_bytes","Math","ceil","a","generate","cmp","_randrange","start","stop","size","sub","add","test","k","cb","red","mont","rone","toRed","max","n1","subn","s","testn","d","shrn","rn1","prime","x","redPow","redSqr","getDivisor","g","gcd","cmpn","fromRed","assert","val","Error","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","_init","Buffer","wordSize","window","e","parseHex4Bits","string","index","parseHexByte","lowerBound","r","parseBase","str","end","mul","min","num","left","right","_initNumber","_initArray","_parseHex","_parseBase","j","w","off","strip","parseLength","limbLen","limbPow","total","mod","imuln","_iaddn","pow","copy","dest","clone","_expand","_normSign","inspect","zeros","groupSizes","groupBases","toBitArray","bit","wbit","smallMulTo","self","out","b","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","t","_zeroBits","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","ushrn","imaskn","maskn","isubn","addn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","isEven","yp","xp","im","isOdd","jm","_invmp","x1","x2","delta","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","ctx","convertTo","_forceRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","u","equal","HashBase","ARRAY16","MD5","_a","_b","_c","_d","rotl","fnF","fnG","fnH","fnI","_update","M","_block","readInt32LE","_digest","_blockOffset","fill","writeUInt32LE","_length","buffer","allocUnsafe","writeInt32LE"],"mappings":"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","file":"js/chunk-17aca197.7178ca5a.js","sourcesContent":["'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n"],"sourceRoot":""}