{"version":3,"sources":["webpack:///./node_modules/create-hmac/browser.js","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/create-ecdh/node_modules/bn.js/lib/bn.js","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/create-hash/md5.js","webpack:///./node_modules/cipher-base/index.js","webpack:///./node_modules/create-hash/browser.js","webpack:///./node_modules/create-hmac/legacy.js","webpack:///./node_modules/create-ecdh/browser.js"],"names":["inherits","Legacy","Base","Buffer","md5","RIPEMD160","sha","ZEROS","alloc","Hmac","alg","key","call","this","from","blocksize","_alg","_key","length","hash","update","digest","concat","ipad","_ipad","allocUnsafe","opad","_opad","i","_hash","prototype","_update","data","_final","h","module","exports","toLowerCase","redefine","anObject","fails","flags","TO_STRING","RegExpPrototype","RegExp","nativeToString","NOT_GENERIC","source","INCORRECT_NAME","name","R","p","String","rf","f","undefined","unsafe","assert","val","msg","Error","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","red","_init","wordSize","window","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","len","Math","min","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","strip","parseLength","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","toBitArray","bitLength","bit","wbit","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","u","arg","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","isObject","isDate","d","isError","isFunction","isPrimitive","Object","isBuffer","MD5","buffer","Transform","StringDecoder","CipherBase","hashMode","_finalOrDigest","final","__final","_decoder","_encoding","inputEnc","outputEnc","outData","_toString","setAutoPadding","getAuthTag","setAuthTag","setAAD","_transform","err","push","_flush","done","value","enc","fin","write","Hash","curve","ECDH","aliases","secp256k1","secp224r1","prime256v1","prime192v1","ed25519","secp384r1","secp521r1","curveType","elliptic","ec","keys","formatReturnValue","bn","buf","fill","p256","secp256r1","secp192r1","p384","p521","generateKeys","format","genKeyPair","getPublicKey","computeSecret","other","inenc","otherPub","keyFromPublic","getPublic","getPrivate","getX","getPrivateKey","setPublicKey","pub","_importPublic","setPrivateKey","priv","_priv","_importPrivate"],"mappings":"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","file":"js/chunk-247caca8.1cfd6d0e.js","sourcesContent":["'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n"],"sourceRoot":""}